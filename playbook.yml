- hosts: localhost
  connection: local

  vars:
    pip_install_packages:
      - name: docker

  tasks:
      
    - name: Install Role PIP
      local_action: command ansible-galaxy install -f geerlingguy.pip 

    - name: Install Role Docker
      local_action: command ansible-galaxy install -f geerlingguy.docker

    - name: Check if PIP is already installed
      stat: path=/usr/bin/pip
      register: pip_exists

    - name: Check if Docker is already installed
      stat: path=/usr/bin/docker
      register: docker_exists

    - name: Applying role PIP
      command: mv ~/.ansible/roles/geerlingguy.pip ~/.ansible/roles/pwslab.pip
      when: not pip_exists.stat.exists
      ignore_errors: yes

    - name: Applying role Docker
      command: mv ~/.ansible/roles/geerlingguy.docker ~/.ansible/roles/pwslab.docker
      when: not docker_exists.stat.exists
      ignore_errors: yes

    - name: Check the version of CentOS
      command: cat /etc/centos-release
      register: cent_os
      ignore_errors: yes

    - name: Check if version of Ubuntu
      shell: |
        lsb_release -d
      register: ubuntu_os
      ignore_errors: yes

    - name: Applying replacement on 20.04 or 8
      lineinfile:
          dest: ~/.ansible/roles/pwslab.pip/defaults/main.yml
          regexp: '^pip_package: '
          line: 'pip_package: python3-pip'
          state: present
      when:
        - cent_os.stdout | regex_search("8") or ubuntu_os.stdout | regex_search("20.04")
        - not pip_exists.stat.exists

    - name: Installing PIP
      include_role:
        name: pwslab.pip
      when: not pip_exists.stat.exists
    
    - name: Installing Docker
      include_role:
          name: pwslab.docker
      when: not docker_exists.stat.exists


    - name: Get the only office source script
      get_url:
        url: http://download.onlyoffice.com/install/opensource-install.sh
        dest: /tmp/opensource-install.sh
    
    # - pause:
    #       prompt: "Please Type Domain Name"
    #       echo: yes
    #   register: your_domain_name_result

    # - set_fact:
    #         your_domain_name: "{{ your_domain_name_result.user_input }}"
    #         docker_yes: Y

    # - name: Initiate OnlyOffice
    #   expect:
    #     command: bash /tmp/opensource-install.sh -md "{{ your_domain_name }}"
    #     responses:
    #       "Install with Docker [Y/N/C]?": "{{ docker_yes }}"
    
